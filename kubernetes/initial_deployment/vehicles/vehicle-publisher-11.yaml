apiVersion: apps/v1
kind: Deployment
metadata:
  name: vehicle-publisher-11
  labels:
    app: robotkube
    node: robotkube-vehicle-11
spec:
  replicas: 1
  selector:
    matchLabels:
      node: robotkube-vehicle-11
  template:
    metadata:
      labels:
        node: robotkube-vehicle-11
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: rosbag-play
        image: rwthika/robotkube-demo-rosbag:2024-03
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -c
          - |
            source /opt/ros/$ROS_DISTRO/setup.bash
            while true; do ros2 topic list &> /dev/null && echo "ROS is running" && break; echo "ROS is not running, retrying in 0.1s"; sleep 0.1; done
            sleep infinity
        env:
          - name: DOCKER_USER
            value: root
      - name: mqtt-client-vehicle-11-vehicles
        image: rwthika/robotkube-mqtt-client:2024-03
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -c
          - |
            source install/setup.bash
            until ros2 topic list &> /dev/null; do echo "Waiting for ROS ..."; sleep 0.1; done
            ros2 launch /docker-ros/ws/install/share/mqtt_client/params/standalone_mqtt_client_source.launch.ros2.xml params_file:="/docker-ros/ws/install/share/mqtt_client/params/mqtt_params_vehicle-11_to_ed_k8s_source.yaml"
        env:
          - name: DOCKER_USER
            value: root
          - name: VEHICLE
            value: "vehicle_11"
        volumeMounts:
        - name: mqtt-vehicle-to-ed-k8s-source-config-volume
          mountPath: /docker-ros/ws/install/share/mqtt_client/params
      volumes:
          # the configmaps must be created (manually) before they can be used here
        - name: mqtt-vehicle-to-ed-k8s-source-config-volume
          configMap:
            name: mqtt-params-vehicle-to-ed-k8s-source
