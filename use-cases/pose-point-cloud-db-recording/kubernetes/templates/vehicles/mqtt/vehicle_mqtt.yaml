apiVersion: apps/v1
kind: Deployment
metadata:
  name: vehicle-${ID}-mqtt
  labels:
    tag: robotkube
    app: vehicle-${ID}-mqtt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vehicle-${ID}-mqtt
  template:
    metadata:
      labels:
        app: vehicle-${ID}-mqtt
    spec:
      terminationGracePeriodSeconds: 0
      nodeSelector:
        node_id: vehicle_${ID}
      containers:
      - name: mqtt-client-vehicle-${ID}
        image: k3d-robotkube-registry.localhost:41673/mqtt_client:latest
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -c
          - |
            source install/setup.bash
            until ros2 topic list &> /dev/null; do echo "Waiting for ROS ..."; sleep 0.1; done
            ros2 launch /docker-ros/ws/install/share/mqtt_client/params/standalone_mqtt_client_vehicle.launch.ros2.xml params_file:="/docker-ros/ws/install/share/mqtt_client/params/mqtt_params_vehicle_${ID}.yaml"
        env:
          - name: VEHICLE
            value: "vehicle_${ID}"
        volumeMounts:
        - name: mqtt-vehicle-${ID}-config-volume
          mountPath: /docker-ros/ws/install/share/mqtt_client/params
      volumes:
        - name: mqtt-vehicle-${ID}-config-volume
          configMap:
            name: mqtt-params-vehicles
